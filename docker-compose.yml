version: '3.8'

services:
  cloudflare-dns-manager:
    image: cloudflare-dns-manager:latest
    environment:
      # Configuração dos domínios (JSON)
      # Formato: {"dominio.com": {"zone_id": "zone_id_aqui", "api_key": "api_key_aqui"}}
      CLOUDFLARE_DOMAINS: |
        {
          "meudominio.com": {
            "zone_id": "sua_zone_id_aqui",
            "api_key": "sua_api_key_aqui"
          },
          "outrodominio.com": {
            "zone_id": "outra_zone_id_aqui", 
            "api_key": "outra_api_key_aqui"
          }
        }
      
      # IP público do seu Swarm (onde o Traefik está rodando)
      SWARM_PUBLIC_IP: "192.168.1.100"
      
      # IP público alternativo (se não conseguir detectar automaticamente)
      PUBLIC_IP: "192.168.1.100"
      
      # Intervalo de verificação em segundos (padrão: 30)
      CHECK_INTERVAL: "30"
    
    volumes:
      # Socket do Docker para acessar API do Swarm
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    networks:
      - traefik-network
    
    deploy:
      replicas: 1
      placement:
        constraints:
          # Executa apenas em nós manager
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        # Labels do Traefik (opcional - para monitoramento web)
        - "traefik.enable=true"
        - "traefik.http.routers.dns-manager.rule=Host(`dns-manager.meudominio.com`)"
        - "traefik.http.routers.dns-manager.entrypoints=websecure"
        - "traefik.http.routers.dns-manager.tls.certresolver=letsencrypt"
        - "traefik.http.services.dns-manager.loadbalancer.server.port=8080"
        
        # Label customizada para controlar proxy Cloudflare
        - "traefik.http.routers.dns-manager.cloudflare.proxied=true"

networks:
  traefik-network:
    external: true

---
# Exemplo de serviço que será monitorado
version: '3.8'

services:
  minha-app:
    image: nginx:alpine
    networks:
      - traefik-network
    
    deploy:
      replicas: 2
      labels:
        # Labels padrão do Traefik
        - "traefik.enable=true"
        - "traefik.http.routers.minha-app.rule=Host(`app.meudominio.com`)"
        - "traefik.http.routers.minha-app.entrypoints=websecure"
        - "traefik.http.routers.minha-app.tls.certresolver=letsencrypt"
        - "traefik.http.services.minha-app.loadbalancer.server.port=80"
        
        # Label customizada para controlar proxy Cloudflare
        # Se não especificada, o padrão é 'true'
        - "traefik.http.routers.minha-app.cloudflare.proxied=false"
  
  api-service:
    image: node:alpine
    networks:
      - traefik-network
    
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`api.meudominio.com`)"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.routers.api.tls.certresolver=letsencrypt"
        - "traefik.http.services.api.loadbalancer.server.port=3000"
        
        # Este serviço usará proxy da Cloudflare (padrão)
        - "traefik.http.routers.api.cloudflare.proxied=true"

networks:
  traefik-network:
    external: true